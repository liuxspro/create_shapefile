import { create_dbf_field_value } from "@liuxspro/utils";
// 字段长度
const FIELD_LENGTH = {
  DKMC: 254,
  DKDM: 100,
  XZQDM: 12,
  XZQMC: 100,
  YDMJ: 17,
  DH: 16,
  SCRQ: 8,
  SCDW: 254,
  BZ: 254,
};
// 预定义好的文件头信息 占用321字节
// deno-fmt-ignore
const header_data = new Uint8Array([
  0x03, 0x7c, 0x02, 0x03, 0x01, 0x00, 0x00, 0x00, 0x41, 0x01, 0xf8, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x4b, 0x4d, 0x43, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x4b, 0x44, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43,
  0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x58, 0x5a, 0x51, 0x44, 0x4d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x58, 0x5a, 0x51, 0x4d, 0x43,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x59, 0x44, 0x4d, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x4e, 0x00, 0x00, 0x00, 0x00, 0x11, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x44, 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x4e, 0x00, 0x00, 0x00, 0x00, 0x10,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x43, 0x52, 0x51,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x53, 0x43, 0x44, 0x57, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x43, 0x00, 0x00, 0x00, 0x00, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
  0x00, 0x00, 0x00, 0x42, 0x5a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x00,
  0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0d,
]);

// Record deleted flag   0x20:有效,0x2A:记录已删除
const RECORD_FLAG = new Uint8Array([0x20]);
const EOF = new Uint8Array([0x1a]);

function generate_fields_array(fields) {
  /**
   * 根据字段信息，生成 Uint8Array
   */
  const arrays = [];
  // deno-fmt-ignore
  const fields_order = ["DKMC", "DKDM", "XZQDM", "XZQMC", "YDMJ", "DH", "SCRQ", "SCDW", "BZ"]; // 按此字段顺序写入
  for (let key of fields_order) {
    if (fields.hasOwnProperty(key) && FIELD_LENGTH[key]) {
      let array;
      if (key === "YDMJ" || key == "DH") {
        array = create_dbf_field_value(fields[key], FIELD_LENGTH[key], "right");
      } else {
        array = create_dbf_field_value(fields[key], FIELD_LENGTH[key]);
      }
      arrays.push(array);
    }
  }
  return arrays;
}

function concatenate(resultConstructor, ...arrays) {
  /**
   * 合并所有的 Uint8Array
   * https://www.cnblogs.com/qinmengjiao123-123/p/7194169.html
   */
  let totalLength = 0;
  for (let arr of arrays) {
    totalLength += arr.length;
  }
  let result = new resultConstructor(totalLength);
  let offset = 0;
  for (let arr of arrays) {
    result.set(arr, offset);
    offset += arr.length;
  }
  return result;
}

function create_dbf(fields) {
  const array_list = generate_fields_array(fields);
  const arrays = concatenate(Uint8Array, ...array_list);
  const total = concatenate(Uint8Array, ...[
    header_data,
    RECORD_FLAG,
    arrays,
    EOF,
  ]);
  return total;
}

export { create_dbf, FIELD_LENGTH };
